version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: notification_events_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: notification_events
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notification_events_api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=notification_events
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - API_KEY=test-api-key-123
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
      - LOG_LEVEL=info
      - ENABLE_RETRY_JOB=true
      - RETRY_INTERVAL_MS=60000
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
      - /app/node_modules
    command: >
      sh -c "npm install && npm run migrate:up && npm run dev"

  prometheus:
    image: prom/prometheus:latest
    container_name: notification_events_prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - api

  grafana:
    image: grafana/grafana:latest
    container_name: notification_events_grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres_data:
  grafana_data: